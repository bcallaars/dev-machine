
- name: Set cron shell
  cron: name=SHELL env=yes value=/bin/zsh

- name: Empty existing ZSH config
  copy:
    content: ""
    dest: ~/.zshrc
    force: true

- name: ZSH config
  lineinfile: dest=~/.zshrc line='{{ item }}'
  with_items:
    - 'HISTFILE=/dev/null'
    - 'export PATH="/usr/local/opt/python@2/bin:$PATH"'
    - 'ZSH_TMUX_AUTOSTART=true'
    - 'ZSH_TMUX_AUTOQUIT=false'
    - "source $(brew --prefix)/share/antigen/antigen.zsh"
    - "antigen bundle zsh-users/zsh-syntax-highlighting"
    - "antigen bundle zsh-users/zsh-autosuggestions"
    - "antigen theme refined"
    - "antigen bundle git"
    - "antigen bundle docker"
    - "antigen bundle tmux"
    - "antigen bundle vi-mode"
    - "antigen bundle urltools"
    - "antigen apply"
    - "export EDITOR=nvim"
    - 'COMPLETION_WAITING_DOTS="true"'
    - 'find ~/Source -type d -name node_modules -maxdepth 4 -exec tmutil addexclusion {} \;'
    - 'eval "$(rbenv init -)"'

- name: Make sure PIP is installed
  become: true
  become_user: "root"
  easy_install: name=pip state=latest
  ignore_errors: yes

- name: Prepare Neovim directories
  file: path=~/.config/nvim/bundle state=directory

- name: Copy Neovim configuration
  copy:
    src: "{{ playbook_dir }}/dotfiles/init.vim"
    dest: ~/.config/nvim/init.vim

- name: Install Vundle for Neovim
  git:
    repo: 'https://github.com/VundleVim/Vundle.vim.git'
    dest: ~/.config/nvim/bundle/Vundle.vim

- name: Create aliases
  lineinfile: dest=~/.zshrc line='alias {{ item.key }}=\"{{ item.value }}\"'
  with_dict: "{{ aliases }}"
  vars:
    aliases:
      findinfiles: "grep --exclude-dir={node_modules,.git,dist,build} -irn \".\" -e"
      docker_clean_images: 'docker rmi \$(docker images -a --filter=dangling=true -q) --force'
      docker_clean_containers: 'docker rm -v \$(docker ps -a -q -f status=exited)'
      docker_clean_volumes: 'docker volume rm \$(docker volume ls -qf dangling=true)'
      docker_clean: docker_clean_images; docker_clean_containers; docker_clean_volumes
      ip: "curl icanhazip.com"
      ls: "exa -abghl -L 3 --group-directories-first"
      l: "ls"
      start_redis: "redis-server /usr/local/etc/redis.conf"
      start_postgresql: "pg_ctl -D /usr/local/var/postgres start"
      clean: "git clean -fxd"
      ctags: "`brew --prefix`/bin/ctags"
      add_ctags: "ctags -R --exclude=.git --exclude=node_modules --exclude=log *"
      "..": "cd .."
      "...": "cd ..; cd .."
      "....": "cd ..; cd ..; cd .."
      google: "/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

- name: Empty existing tmux config
  copy:
    content: ""
    dest: ~/.tmux.conf
    force: true

- name: Create tmux config
  lineinfile: dest=~/.tmux.conf line='{{ item }}'
  with_items:
    - 'set -g status off'
    - 'set-window-option -g mode-keys vi'
    - 'set -ga terminal-overrides ",st-256color:Tc"'
    - 'set -s escape-time 0'
    - 'unbind C-b'
    - 'set -g prefix C-a'
    - 'bind C-a send-prefix'

- name: Create gpg-agent config
  copy:
    dest: ~/.gnupg/gpg-agent.conf
    content: "pinentry-program /usr/local/bin/pinentry-mac"
    force: true
